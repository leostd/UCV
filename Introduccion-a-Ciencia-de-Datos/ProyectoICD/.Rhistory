fit2 <- hclust(distMatrix, method = "ward.D")
plot(fit2)
matrixClust <- aportes[c("Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
distMatrix2 <- dist(matrixClust)
fit2 <- hclust(distMatrix, method = "ward.D")
plot(fit2)
View(matrixClust)
fit2 <- hclust(distMatrix2, method = "ward.D")
plot(fit2)
cols <- c("a","b")
foo <- structure(list(c(1, 2 ), c(3, 3)), .Names = cols, row.names = c(NA, -2L), class = "data.frame")
view(foo)
View(foo)
foo <- structure(list( .Names = cols, row.names = c(NA, -2L), class = "data.frame")
foo <- structure(list(.Names = cols, row.names = c(NA, -2L), class = "data.frame")
foo <- structure(list(.Names = cols, row.names = c(NA, -2L), class = "data.frame")
foo <- structure(.Names = cols, row.names = c(NA, -2L), class = "data.frame")
foo <- structure(.Names = cols, row.names = c(NA, -2L), class = "data.frame")
transpose
?transpose
View(matrixClust)
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
View(matrixClust)
t(matrixClust)
matrixClust <- t(matrixClust)
View(matrixClust)
for( i in 1:43 ){
names(matrixClust)[i] <- paste(freqTerms[i])
}
View(matrixClust)
for( i in 1:43 ){
colnames(matrixClust)[i] <- paste(freqTerms[i])
}
colnames(matrixClust)[i] <- freqTerms[i]
for( i in 1:43 ){
colnames(matrixClust)[i] <- freqTerms[i]
}
distMatrix2 <- dist(matrixClust[2:6,])
fit2 <- hclust(distMatrix2, method = "ward.D")
plot(f)
plot(fit2)
rect.hclust(fit2, k=3)
grupos <- cutree(fit2, k = 3)
matrixClust$Grupo
matrixClust$Grupo <- grupos
matrixClust <- matrixClust[2:6,]
matrixClust <- t(matrixClust)
distMatrix2 <- dist(matrixClust[2:6,])
fit2 <- hclust(distMatrix2, method = "ward.D")
View(matrixClust)
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
matrixClust <- t(matrixClust)
distMatrix2 <- dist(matrixClust[2:6,])
fit2 <- hclust(distMatrix2, method = "ward.D")
plot(fit2)
rect.hclust(fit2, k=3)
matrixClust <- matrixClust[2:6,]
grupos <- cutree(fit2, k = 3)
matrixClust$Grupo <- grupos
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
matrixClust <- t(matrixClust)
matrixClust <- matrixClust[2:6,]
View(matrixClust)
View(postPersona1)
data <- na.omit(data)
#Eliminamos la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Elimina las filas que solo contienen un caracter no significativo
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
data$post <- tolower(data$post)
myStopwords <- c(stopwords(kind="es"), stopwords(kind='en'), 'mierda', 'verga', 'puta', 'fuck')
data$post <- removeWords(data$post, myStopwords)
#Eliminamos iconos codificados en UTF-8 (Algunos)
#Eliminamos signos de puntuacion
data$post <- removePunctuation(data$post)
#Eliminaos los URL
data$post <- removeURL(data$post)
data$post <- removeUTFIcons(data$post)
#Removemos palabras no significativas para nuestro estudio
#Colocamos todas las letras en minuscula
#Eliminamos por 2da vez la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos por 2da vez las filas que contienen catracteres no significativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Eliminamos varios elementos antes mencionados en la definicion de esta funcion
data$post <- removeCharacters(data$post)
#Eliminamos los numeros
data$post <- removeNumbers(data$post)
#Eliminamos caracteres individuales y espacios en blanco al inicio del post
data$post <- removeSingles(data$post)
#Eliminamos por ultima vez la redundancia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos las filas con caracteres no signuficativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
```
#Armamos 5 data frames, uno por usuario
postPersona1 <- data[data$id_user==1,]
postPersona2 <- data[data$id_user==2,]
postPersona3 <- data[data$id_user==3,]
postPersona4 <- data[data$id_user==4,]
postPersona5 <- data[data$id_user==5,]
#Armamos los corpus para luego armar las term-document matrix
corpus1 <- Corpus(VectorSource(postPersona1))
corpus2 <- Corpus(VectorSource(postPersona2))
corpus3 <- Corpus(VectorSource(postPersona3))
corpus4 <- Corpus(VectorSource(postPersona4))
corpus5 <- Corpus(VectorSource(postPersona5))
#Armamos las matrices respectivas
tdm1 <- TermDocumentMatrix(corpus1,control=list(wordLengths=c(2,Inf)))
tdm2 <- TermDocumentMatrix(corpus2,control=list(wordLengths=c(2,Inf)))
tdm3 <- TermDocumentMatrix(corpus3,control=list(wordLengths=c(2,Inf)))
tdm4 <- TermDocumentMatrix(corpus4,control=list(wordLengths=c(2,Inf)))
tdm5 <- TermDocumentMatrix(corpus5,control=list(wordLengths=c(2,Inf)))
#Extraemos los terminos de cada matriz
terminos1<- as.data.frame(unlist(findFreqTerms(tdm1, lowfreq=1)))
terminos2<- as.data.frame(unlist(findFreqTerms(tdm2, lowfreq=1)))
terminos3 <- as.data.frame(unlist(findFreqTerms(tdm3, lowfreq=1)))
terminos4 <- as.data.frame(unlist(findFreqTerms(tdm4, lowfreq=1)))
terminos5 <- as.data.frame(unlist(findFreqTerms(tdm5, lowfreq=1)))
#Calculamos la frecuencia de cada termino por usuario
termFrequency1 <- rowSums(as.matrix(tdm1))
termFrequency2 <- rowSums(as.matrix(tdm2))
termFrequency3 <- rowSums(as.matrix(tdm3))
termFrequency4 <- rowSums(as.matrix(tdm4))
termFrequency5 <- rowSums(as.matrix(tdm5))
#Inicializamos un data frame por usuario
Usuario1 <- data.frame( Termino=character(3700), frecuencia=numeric(3700))
Usuario2 <- data.frame( Termino=character(1545), frecuencia=numeric(1545))
Usuario3 <- data.frame( Termino=character(2800), frecuencia=numeric(2800))
Usuario4 <- data.frame( Termino=character(3222), frecuencia=numeric(3222))
Usuario5 <- data.frame( Termino=character(3282), frecuencia=numeric(3282))
#LLenamos los data frame
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario1 <- Usuario1[ Usuario1$frecuencia > 0,]
Usuario2$Termino <- terminos2[,1]
Usuario2$frecuencia <- termFrequency2
Usuario2 <- Usuario2[ Usuario2$frecuencia > 0,]
Usuario3$Termino <- terminos3[,1]
Usuario3$frecuencia <- termFrequency3
Usuario3 <- Usuario3[ Usuario3$frecuencia > 0,]
Usuario4$Termino <- terminos4[,1]
Usuario4$frecuencia <- termFrequency4
Usuario4 <- Usuario4[ Usuario4$frecuencia > 0,]
Usuario5$Termino <- terminos5[,1]
Usuario5$frecuencia <- termFrequency5
Usuario5 <- Usuario5[ Usuario5$frecuencia > 0,]
names(Usuario1)[2] <- paste("Usuario1")
names(Usuario2)[2] <- paste("Usuario2")
names(Usuario3)[2] <- paste("Usuario3")
names(Usuario4)[2] <- paste("Usuario4")
names(Usuario5)[2] <- paste("Usuario5")
rownames(Usuario1) <- Usuario1$Termino
rownames(Usuario2) <- Usuario2$Termino
rownames(Usuario3) <- Usuario3$Termino
rownames(Usuario4) <- Usuario4$Termino
rownames(Usuario5) <- Usuario5$Termino
Usuario1$Termino <- NULL
Usuario2$Termino <- NULL
Usuario3$Termino <- NULL
Usuario4$Termino <- NULL
Usuario5$Termino <- NULL
#Buscamos las relaciones entre los usuarios y obtemos subconjuntos de los data frames
#Relacion del Usuario 1 con los demas
Relacion12 <- merge(Usuario1, Usuario2, by = "row.names")
Relacion13 <- merge(Usuario1, Usuario3, by = "row.names")
Relacion14 <- merge(Usuario1, Usuario4, by = "row.names")
Relacion15 <- merge(Usuario1, Usuario5, by = "row.names")
#Relacion del usuario2 con los demas
Relacion21 <- merge(Usuario2, Usuario1, by = "row.names")
Relacion23 <- merge(Usuario2, Usuario3, by = "row.names")
Relacion24 <- merge(Usuario2, Usuario4, by = "row.names")
Relacion25 <- merge(Usuario2, Usuario5, by = "row.names")
#Relacion del usuario 3 con los demas
Relacion31 <- merge(Usuario3, Usuario1, by = "row.names")
Relacion32 <- merge(Usuario3, Usuario2, by = "row.names")
Relacion34 <- merge(Usuario3, Usuario4, by = "row.names")
Relacion35 <- merge(Usuario3, Usuario5, by = "row.names")
#Relacion del usuario 4 con el 5
Relacion45 <- merge(Usuario4, Usuario5, by = "row.names")
#Relacion del usuario 1 contra todos los demas
Relacion1vsT <- merge(Relacion12, Relacion13, all = TRUE)
Relacion1vsT <- merge(Relacion1vsT, Relacion14, all = TRUE)
Relacion1vsT <- merge(Relacion1vsT, Relacion15, all = TRUE)
#Relacion del usuario 2 contra todos los demas
Relacion2vsT <- merge(Relacion21, Relacion23, all = TRUE)
Relacion2vsT <- merge(Relacion2vsT, Relacion24, all = TRUE)
Relacion2vsT <- merge(Relacion2vsT, Relacion25, all = TRUE)
#Relacion del usuario 3 contra todos los demas
Relacion3vsT <- merge(Relacion31, Relacion32, all = TRUE)
Relacion3vsT <- merge(Relacion3vsT, Relacion34, all = TRUE)
Relacion3vsT <- merge(Relacion3vsT, Relacion35, all = TRUE)
#Relacion del usuario 4 contra todos los demas
Relacion4vsT <- merge(Relacion14,Relacion24, all = TRUE)
Relacion4vsT <- merge(Relacion4vsT, Relacion34, all = TRUE)
Relacion4vsT <- merge(Relacion4vsT, Relacion45, all = TRUE)
#Relacion del usuario 5 contra todos los demas
Relacion5vsT <- merge(Relacion15, Relacion25, all = TRUE)
Relacion5vsT <- merge(Relacion5vsT, Relacion35, all = TRUE)
Relacion5vsT <- merge(Relacion5vsT, Relacion45, all = TRUE)
#Relacion del de todos contra todos
#En este Data Frame podemos observar las palabras en las que se relacionan unos con otros
Relacion <- merge(Relacion1vsT, Relacion2vsT, all = TRUE)
Relacion <- merge(Relacion, Relacion3vsT, all = TRUE)
Relacion <- merge(Relacion, Relacion4vsT, all = TRUE)
Relacion <- merge(Relacion, Relacion5vsT, all = TRUE)
Relacion[is.na(Relacion)] <- 0
View(terminos2)
corpus <- Corpus(VectorSource(data$post))
tdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(2,Inf)))
Terminos<- (unlist(findFreqTerms(tdm, lowfreq=1)))
allTerms = data.frame( Termino = character(10382), Frecuencia = numeric(10382))
allTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))
frecuenciaTotal <- rowSums(as.matrix(tdm))
allTerms$Frecuencia <- frecuenciaTotal
terminosFrecuentes <- allTerms[ allTerms$Frecuencia > 50, ]
rownames(terminosFrecuentes) <- terminosFrecuentes$Termino
terminosFrecuentes$Termino <- NULL
dim(terminosFrecuentes)
distMatrix <- dist(terminosFrecuentes)
fit <- hclust(distMatrix, method="ward.D")
plot(fit)
rect.hclust(fit, k=3)
aportes <- merge(terminosFrecuentes, Usuario1, all.x = TRUE, by = "row.names")
aportes <- merge(aportes, Usuario2, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario3, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario4, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario5, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes[is.na(aportes)]<- 0
freqTerms <- findFreqTerms(tdm, lowfreq=50)
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
matrixClust <- t(matrixClust)
matrixClust <- matrixClust[2:6,]
distMatrix2 <- dist(matrixClust)
fit2 <- hclust(matrixClust, method = "ward.D")
plot(fit2)
rect.hclust(fit2, k=3)
corpus <- Corpus(VectorSource(data$post))
tdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(2,Inf)))
Terminos<- (unlist(findFreqTerms(tdm, lowfreq=1)))
allTerms = data.frame( Termino = character(10382), Frecuencia = numeric(10382))
allTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))
corpus <- Corpus(VectorSource(data$post))
tdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(1,Inf)))
Terminos<- (unlist(findFreqTerms(tdm, lowfreq=1)))
allTerms = data.frame( Termino = character(10382), Frecuencia = numeric(10382))
allTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))
allTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))
tdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(2,Inf)))
corpus <- Corpus(VectorSource(data$post))
tdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(2,Inf)))
Terminos<- (unlist(findFreqTerms(tdm, lowfreq=1)))
allTerms = data.frame( Termino = character(10358), Frecuencia = numeric(10358))
allTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))
frecuenciaTotal <- rowSums(as.matrix(tdm))
allTerms$Frecuencia <- frecuenciaTotal
terminosFrecuentes <- allTerms[ allTerms$Frecuencia > 50, ]
rownames(terminosFrecuentes) <- terminosFrecuentes$Termino
terminosFrecuentes$Termino <- NULL
dim(terminosFrecuentes)
distMatrix <- dist(terminosFrecuentes)
fit <- hclust(distMatrix, method="ward.D")
plot(fit)
rect.hclust(fit, k=3)
aportes <- merge(terminosFrecuentes, Usuario1, all.x = TRUE, by = "row.names")
aportes <- merge(aportes, Usuario2, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario3, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario4, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes <- merge(aportes, Usuario5, all.x = TRUE, by.x = "Row.names", by.y = "row.names")
aportes[is.na(aportes)]<- 0
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
matrixClust <- t(matrixClust)
matrixClust <- matrixClust[2:6,]
distMatrix2 <- dist(matrixClust)
fit2 <- hclust(matrixClust, method = "ward.D")
plot(fit2)
rect.hclust(fit2, k=3)
```
En el primer grafico podemos observar las palabras mas frecuentes, procederemos ahora a asignar clusters.
freqTerms <- findFreqTerms(tdm, lowfreq=50)
fit2 <- hclust(matrixClust, method = "ward.D")
View(matrixClust)
View(aportes)
distMatrix2 <- dist(matrixClust)
fit2 <- hclust(distMatrix2, method = "ward.D")
plot(fit2)
rect.hclust(fit2, k=3)
matrixClust <- aportes[c("Row.names","Usuario1", "Usuario2", "Usuario3", "Usuario4", "Usuario5")]
View(matrixClust)
View(aportes)
View(terminosFrecuentes)
View(Usuario1)
View(terminos1)
Usuario1 <- data.frame( Termino=character(3700), frecuencia=numeric(3700))
Usuario1$Termino <- terminos1[,1]
Usuario1$Termino <- terminos1[,1]
Usuario1 <- data.frame( Termino=character(3690), frecuencia=numeric(3690))
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario1 <- Usuario1[ Usuario1$frecuencia > 0,]
Usuario2$Termino <- terminos2[,1]
View(terminos2)
Usuario1$Termino <- terminos1
Usuario2$Termino <- terminos2
View(terminos2)
View(Usuario1)
Usuario1$Termino <- terminos1[,1]
View(Usuario1)
View(Termino)
View(Usuario2)
Usuario2 <- data.frame( Termino=character(1540), frecuencia=numeric(1540))
Usuario3 <- data.frame( Termino=character(2800), frecuencia=numeric(2800))
Usuario4 <- data.frame( Termino=character(3222), frecuencia=numeric(3222))
Usuario5 <- data.frame( Termino=character(3282), frecuencia=numeric(3282))
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario1 <- Usuario1[ Usuario1$frecuencia > 0,]
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario1 <- Usuario1[ Usuario1$frecuencia > 0,]
Usuario2$Termino <- terminos2[,1]
View(Usuario2)
Usuario2$frecuencia <- termFrequency2
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario2$Termino <- terminos2[,1]
Usuario2$frecuencia <- termFrequency2
Usuario3$Termino <- terminos3[,1]
Usuario3$frecuencia <- termFrequency3
Usuario3$frecuencia <- termFrequency3
Usuario3 <- data.frame( Termino=character(2795), frecuencia=numeric(2795))
Usuario3$frecuencia <- termFrequency3
Usuario4$Termino <- terminos4[,1]
Usuario3$Termino <- terminos3[,1]
Usuario3$frecuencia <- termFrequency3
Usuario4 <- data.frame( Termino=character(3214), frecuencia=numeric(3214))
Usuario4$Termino <- terminos4[,1]
Usuario4$frecuencia <- termFrequency4
Usuario5$Termino <- terminos5[,1]
Usuario5 <- data.frame( Termino=character(3271), frecuencia=numeric(3271))
Usuario1$Termino <- terminos1[,1]
Usuario1$frecuencia <- termFrequency1
Usuario2$Termino <- terminos2[,1]
Usuario2$frecuencia <- termFrequency2
Usuario3$Termino <- terminos3[,1]
Usuario3$frecuencia <- termFrequency3
Usuario4$Termino <- terminos4[,1]
Usuario4$frecuencia <- termFrequency4
Usuario5$Termino <- terminos5[,1]
Usuario5$frecuencia <- termFrequency5
names(Usuario1)[2] <- paste("Usuario1")
names(Usuario2)[2] <- paste("Usuario2")
names(Usuario3)[2] <- paste("Usuario3")
names(Usuario4)[2] <- paste("Usuario4")
names(Usuario5)[2] <- paste("Usuario5")
rownames(Usuario1) <- Usuario1$Termino
rownames(Usuario2) <- Usuario2$Termino
rownames(Usuario3) <- Usuario3$Termino
rownames(Usuario4) <- Usuario4$Termino
rownames(Usuario5) <- Usuario5$Termino
Usuario1$Termino <- NULL
Usuario2$Termino <- NULL
Usuario3$Termino <- NULL
Usuario4$Termino <- NULL
Usuario5$Termino <- NULL
#Buscamos las relaciones entre los usuarios y obtemos subconjuntos de los data frames
#Relacion del Usuario 1 con los demas
Relacion12 <- merge(Usuario1, Usuario2, by = "row.names")
Relacion13 <- merge(Usuario1, Usuario3, by = "row.names")
Relacion14 <- merge(Usuario1, Usuario4, by = "row.names")
Relacion15 <- merge(Usuario1, Usuario5, by = "row.names")
#Relacion del usuario2 con los demas
Relacion21 <- merge(Usuario2, Usuario1, by = "row.names")
Relacion23 <- merge(Usuario2, Usuario3, by = "row.names")
Relacion24 <- merge(Usuario2, Usuario4, by = "row.names")
Relacion25 <- merge(Usuario2, Usuario5, by = "row.names")
#Relacion del usuario 3 con los demas
Relacion31 <- merge(Usuario3, Usuario1, by = "row.names")
Relacion32 <- merge(Usuario3, Usuario2, by = "row.names")
Relacion34 <- merge(Usuario3, Usuario4, by = "row.names")
Relacion35 <- merge(Usuario3, Usuario5, by = "row.names")
#Relacion del usuario 4 con el 5
Relacion45 <- merge(Usuario4, Usuario5, by = "row.names")
#Relacion del usuario 1 contra todos los demas
Relacion1vsT <- merge(Relacion12, Relacion13, all = TRUE)
Relacion1vsT <- merge(Relacion1vsT, Relacion14, all = TRUE)
Relacion1vsT <- merge(Relacion1vsT, Relacion15, all = TRUE)
#Relacion del usuario 2 contra todos los demas
Relacion2vsT <- merge(Relacion21, Relacion23, all = TRUE)
Relacion2vsT <- merge(Relacion2vsT, Relacion24, all = TRUE)
Relacion2vsT <- merge(Relacion2vsT, Relacion25, all = TRUE)
#Relacion del usuario 3 contra todos los demas
Relacion3vsT <- merge(Relacion31, Relacion32, all = TRUE)
Relacion3vsT <- merge(Relacion3vsT, Relacion34, all = TRUE)
Relacion3vsT <- merge(Relacion3vsT, Relacion35, all = TRUE)
#Relacion del usuario 4 contra todos los demas
Relacion4vsT <- merge(Relacion14,Relacion24, all = TRUE)
data <- na.omit(data)
#Eliminamos la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Elimina las filas que solo contienen un caracter no significativo
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Colocamos todas las letras en minuscula
data$post <- tolower(data$post)
#Removemos palabras no significativas para nuestro estudio
myStopwords <- c(stopwords(kind="es"), stopwords(kind='en'), 'mierda', 'verga', 'puta', 'fuck')
data$post <- removeWords(data$post, myStopwords)
#Eliminamos iconos codificados en UTF-8 (Algunos)
data$post <- removeUTFIcons(data$post)
#Eliminamos signos de puntuacion
data$post <- removePunctuation(data$post)
#Eliminaos los URL
data$post <- removeURL(data$post)
#Eliminamos por 2da vez la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos por 2da vez las filas que contienen catracteres no significativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Eliminamos varios elementos antes mencionados en la definicion de esta funcion
data$post <- removeCharacters(data$post)
#Eliminamos los numeros
data$post <- removeNumbers(data$post)
#Eliminamos caracteres individuales y espacios en blanco al inicio del post
data$post <- removeSingles(data$post)
#Eliminamos por ultima vez la redundancia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos las filas con caracteres no signuficativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
```
data <- read.csv("data.csv", sep=";", row.names=1)
data <- na.omit(data)
#Eliminamos la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Elimina las filas que solo contienen un caracter no significativo
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Colocamos todas las letras en minuscula
data$post <- tolower(data$post)
#Removemos palabras no significativas para nuestro estudio
myStopwords <- c(stopwords(kind="es"), stopwords(kind='en'), 'mierda', 'verga', 'puta', 'fuck')
data$post <- removeWords(data$post, myStopwords)
#Eliminamos iconos codificados en UTF-8 (Algunos)
data$post <- removeUTFIcons(data$post)
#Eliminamos signos de puntuacion
data$post <- removePunctuation(data$post)
#Eliminaos los URL
data$post <- removeURL(data$post)
#Eliminamos por 2da vez la redundacia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos por 2da vez las filas que contienen catracteres no significativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Eliminamos varios elementos antes mencionados en la definicion de esta funcion
data$post <- removeCharacters(data$post)
#Eliminamos los numeros
data$post <- removeNumbers(data$post)
#Eliminamos caracteres individuales y espacios en blanco al inicio del post
data$post <- removeSingles(data$post)
#Eliminamos por ultima vez la redundancia de espacios en blanco
data$post<-stripWhitespace(as.character(data$post))
#Eliminamos las filas con caracteres no signuficativos
data<- data[!(is.na(data$post) | data$post=="" | data$post==" " | data$post=="\n" | data$post=="\v") | data$post=="\t" | data$post=="\r" | data$post=="\f",]
#Armamos 5 data frames, uno por usuario
postPersona1 <- data[data$id_user==1,]
postPersona2 <- data[data$id_user==2,]
postPersona3 <- data[data$id_user==3,]
postPersona4 <- data[data$id_user==4,]
postPersona5 <- data[data$id_user==5,]
#Armamos los corpus para luego armar las term-document matrix
corpus1 <- Corpus(VectorSource(postPersona1))
corpus2 <- Corpus(VectorSource(postPersona2))
corpus3 <- Corpus(VectorSource(postPersona3))
corpus4 <- Corpus(VectorSource(postPersona4))
corpus5 <- Corpus(VectorSource(postPersona5))
#Armamos las matrices respectivas
tdm1 <- TermDocumentMatrix(corpus1,control=list(wordLengths=c(2,Inf)))
tdm2 <- TermDocumentMatrix(corpus2,control=list(wordLengths=c(2,Inf)))
tdm3 <- TermDocumentMatrix(corpus3,control=list(wordLengths=c(2,Inf)))
tdm4 <- TermDocumentMatrix(corpus4,control=list(wordLengths=c(2,Inf)))
tdm5 <- TermDocumentMatrix(corpus5,control=list(wordLengths=c(2,Inf)))
#Extraemos los terminos de cada matriz
terminos1<- as.data.frame(unlist(findFreqTerms(tdm1, lowfreq=1)))
terminos2<- as.data.frame(unlist(findFreqTerms(tdm2, lowfreq=1)))
terminos3 <- as.data.frame(unlist(findFreqTerms(tdm3, lowfreq=1)))
terminos4 <- as.data.frame(unlist(findFreqTerms(tdm4, lowfreq=1)))
terminos5 <- as.data.frame(unlist(findFreqTerms(tdm5, lowfreq=1)))
#Calculamos la frecuencia de cada termino por usuario
termFrequency1 <- rowSums(as.matrix(tdm1))
termFrequency2 <- rowSums(as.matrix(tdm2))
termFrequency3 <- rowSums(as.matrix(tdm3))
termFrequency4 <- rowSums(as.matrix(tdm4))
termFrequency5 <- rowSums(as.matrix(tdm5))
#Inicializamos un data frame por usuario
Usuario1 <- data.frame( Termino=character(3690), frecuencia=numeric(3690))
Usuario2 <- data.frame( Termino=character(1540), frecuencia=numeric(1540))
Usuario3 <- data.frame( Termino=character(2795), frecuencia=numeric(2795))
View(Usuario1)
View(Usuario2)
View(Usuario3)
View(Usuario4)
Usuario4 <- data.frame( Termino=character(3214), frecuencia=numeric(3214))
Usuario5 <- data.frame( Termino=character(3271), frecuencia=numeric(3271))
#LLenamos los data frame
Usuario1$Termino <- terminos1[,1]
Usuario2$frecuencia <- termFrequency2
Usuario3$frecuencia <- termFrequency3
Usuario4$frecuencia <- termFrequency4
Usuario5$frecuencia <- termFrequency5
Usuario1 <- data.frame( Termino=character(3700), frecuencia=numeric(3700))
Usuario2 <- data.frame( Termino=character(1545), frecuencia=numeric(1545))
Usuario3 <- data.frame( Termino=character(2800), frecuencia=numeric(2800))
Usuario4 <- data.frame( Termino=character(3222), frecuencia=numeric(3222))
Usuario5 <- data.frame( Termino=character(3282), frecuencia=numeric(3282))
#LLenamos los data frame
write.csv(Relacion, "21014872_22022441_23194702_facebook_usuarios_grupos.csv")
