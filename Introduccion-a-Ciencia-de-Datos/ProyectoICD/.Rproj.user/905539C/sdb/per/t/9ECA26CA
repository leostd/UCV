{
    "contents" : "library(tm)\nsetwd(\"~/Data Science/ProyectoICD\")\ndata <- read.csv(\"data.csv\", sep=\";\", row.names=1)\n\n\n#write.csv(data, file=\"prueba.csv\")\n#Inicio Limpieza de datos\n#Inicio Limpieza de datos\n\n#Eliminamos las filas NA\ndata <- na.omit(data)\n\n#Eliminamos la redundacia de espacios en blanco\ndata$post<-stripWhitespace(as.character(data$post))\n\n#Elimina las filas que solo contienen un caracter no significativo\ndata<- data[!(is.na(data$post) | data$post==\"\" | data$post==\" \" | data$post==\"\\n\" | data$post==\"\\v\") | data$post==\"\\t\" | data$post==\"\\r\" | data$post==\"\\f\",]\n\n#Colocamos todas las letras en minuscula\ndata$post <- tolower(data$post)\n\n#Removemos palabras no significativas para nuestro estudio\nmyStopwords <- c(stopwords(kind=\"es\"), stopwords(kind='en'), 'mierda', 'verga', 'puta', 'fuck')\ndata$post <- removeWords(data$post, myStopwords)\n\n#Eliminamos iconos codificados en UTF-8 (Algunos)\ndata$post <- removeUTFIcons(data$post)\n\n#Eliminamos signos de puntuacion\ndata$post <- removePunctuation(data$post)\n\n#Eliminaos los URL \ndata$post <- removeURL(data$post)\n\n#Eliminamos por 2da vez la redundacia de espacios en blanco\ndata$post<-stripWhitespace(as.character(data$post))\n\n#Eliminamos por 2da vez las filas que contienen catracteres no significativos\ndata<- data[!(is.na(data$post) | data$post==\"\" | data$post==\" \" | data$post==\"\\n\" | data$post==\"\\v\") | data$post==\"\\t\" | data$post==\"\\r\" | data$post==\"\\f\",]\n\n#Eliminamos varios elementos antes mencionados en la definicion de esta funcion\ndata$post <- removeCharacters(data$post)\n\n#Eliminamos los numeros\ndata$post <- removeNumbers(data$post)\n\n#Eliminamos caracteres individuales y espacios en blanco al inicio del post\ndata$post <- removeSingles(data$post)\n\n#Eliminamos por ultima vez la redundancia de espacios en blanco\ndata$post<-stripWhitespace(as.character(data$post))\n\n#Eliminamos las filas con caracteres no signuficativos\ndata<- data[!(is.na(data$post) | data$post==\"\" | data$post==\" \" | data$post==\"\\n\" | data$post==\"\\v\") | data$post==\"\\t\" | data$post==\"\\r\" | data$post==\"\\f\",]\n\n############Fin Limpieza de datos################\n\n\ncorpus <- Corpus(VectorSource(data$post))\ntdm <- TermDocumentMatrix(corpus,control=list(wordLengths=c(2,Inf)))\nTerminos<- (unlist(findFreqTerms(tdm, lowfreq=1)))\n\nallTerms = data.frame( Termino = character(10382), Frecuencia = numeric(10382))\nallTerms$Termino <- (unlist(findFreqTerms(tdm, lowfreq=1)))\nfrecuenciaTotal <- rowSums(as.matrix(tdm))\nallTerms$Frecuencia <- frecuenciaTotal\n\nterminosFrecuentes <- allTerms[ allTerms$Frecuencia > 50, ]\nrownames(terminosFrecuentes) <- terminosFrecuentes$Termino\nterminosFrecuentes$Termino <- NULL\ndim(terminosFrecuentes)\ndistMatrix <- dist(terminosFrecuentes)\nfit <- hclust(distMatrix, method=\"ward.D\")\nplot(fit)\nrect.hclust(fit, k=3)\n\naportes <- merge(terminosFrecuentes, Usuario1, all.x = TRUE, by = \"row.names\")\naportes <- merge(aportes, Usuario2, all.x = TRUE, by.x = \"Row.names\", by.y = \"row.names\")\naportes <- merge(aportes, Usuario3, all.x = TRUE, by.x = \"Row.names\", by.y = \"row.names\")\naportes <- merge(aportes, Usuario4, all.x = TRUE, by.x = \"Row.names\", by.y = \"row.names\")\naportes <- merge(aportes, Usuario5, all.x = TRUE, by.x = \"Row.names\", by.y = \"row.names\")\naportes[is.na(aportes)]<- 0\n\n#Formaremos 3 subgrupos de palabras frecuentes\ngrupos <- cutree(fit, k = 3)\nterminosFrecuentes$Grupo <- grupos\n\nGrupo1 <- aportes[aportes$Grupo==1,]\nGrupo2 <- aportes[aportes$Grupo==2,]\nGrupo3 <- aportes[aportes$Grupo==3,]\n\n\nfreqTerms <- findFreqTerms(tdm, lowfreq=50)\nmatrixClust <- aportes[c(\"Row.names\",\"Usuario1\", \"Usuario2\", \"Usuario3\", \"Usuario4\", \"Usuario5\")]\nmatrixClust <- t(matrixClust)\nmatrixClust <- matrixClust[2:6,]\n\ndistMatrix2 <- dist(matrixClust)\nfit2 <- hclust(matrixClust, method = \"ward.D\")\nplot(fit2)\nrect.hclust(fit2, k=3)\n\n#Observaremos relaciones entre los usuarios\naportes\n\n#Matriz de correlaciones\ncor(aportes[,4:8])\n\n#Analisis de componentes principales\ncomponentes <- PCA(aportes[, 4:8])\n\n\n\n####################Funciones############\nremoveCharacters<- function(x){\n  x<-gsub(\"aa+\",\"a\", x)\n  x<-gsub(\"bb+]\",\"b\", x)\n  x<-gsub(\"(cc)+c+\",\"c\", x)\n  x<-gsub(\"dd+\",\"d\", x)\n  x<-gsub(\"ee+\",\"e\", x)\n  x<-gsub(\"ff+\",\"f\", x)\n  x<-gsub(\"gg+\",\"g\", x)\n  x<-gsub(\"hh+\",\"h\", x)\n  x<-gsub(\"ii+\",\"i\", x)\n  x<-gsub(\"jj+\",\"j\", x)\n  x<-gsub(\"kk+\",\"k\", x)\n  x<-gsub(\"(ll)+l+\",\"l\", x)\n  x<-gsub(\"mm+\",\"m\", x)\n  x<-gsub(\"nn+\",\"n\", x)\n  x<-gsub(\"oo+\",\"o\", x)\n  x<-gsub(\"pp+\",\"p\", x)\n  x<-gsub(\"qq+\",\"q\", x)\n  x<-gsub(\"rr+r+\",\"r\", x)\n  x<-gsub(\"ss+\",\"s\", x)\n  x<-gsub(\"tt+\",\"t\", x)\n  x<-gsub(\"uu+\",\"u\", x)\n  x<-gsub(\"vv+\",\"v\", x)\n  x<-gsub(\"ww+\",\"w\", x)\n  x<-gsub(\"xx+\",\"x\", x)\n  x<-gsub(\"yy+\",\"y\", x)\n  x<-gsub(\"zz+\",\"z\", x)\n  x<-gsub(\"(jaja)+(ja)*\", \"haha\", x)\n  x<-gsub(\"(jeje)+(je)*\", \"haha\", x)\n  x<-gsub(\"(juju)+(ju)*\", \"haha\", x)\n  x<-gsub(\"(jojo)+(jo)*\", \"haha\", x)\n  x<-gsub(\"(hehe)+(he)*\", \"haha\", x)\n  x<-gsub(\"(haha)+(ha)*\", \"haha\", x)\n  x<-gsub(\"[jska]{6}[jska]*\",\"haha\",x)\n  x<-gsub(\"[hsdg]{6}[hdgs]*\",\"haha\",x)\n  x<-gsub(\"(xd)+\",\"haha\", x)\n  x<-gsub(\"(lol)+[lo]*\", \"haha\",x)\n  x<-gsub(\"videos\", \"video\", x)\n  x\n}\n\n#Elimina iconos con codificacion UTF-8\nremoveUTFIcons <- function(x){\n  gsub(\"<[[:alnum:]+[:alnum:]+]+>\",\"\",x)\n}\n\n#Elimina los numeros\nremoveNumbers <- function(x){\n  gsub(\"[[:digit:]]\", \"\", x)\n}\n\n#Elimina los caracteres individuales y los espacios en blanco al inicio del post\nremoveSingles <- function(x){\n  x <- gsub(\"^.$\",\"\",x)\n  x <- gsub(\"^.[[:space:]]$\",\"\",x)\n  x <- gsub(\"^[[:space:]]\", \"\", x)\n  x\n}\n\n#Elimina los URL de los datos\nremoveURL <- function(x){\n  x<-gsub(\"http[[:alnum:]]*\", \"\", x)\n  x<-gsub(\"www[[:alnum:]]*\", \"\", x)\n  x\n} \n\n####################Fin Funciones#################\n\n\n\n",
    "created" : 1439396887751.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "865488837",
    "id" : "9ECA26CA",
    "lastKnownWriteTime" : 1439397422,
    "path" : "~/Data Science/ProyectoICD/source.R",
    "project_path" : "source.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}